#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <EEPROM.h>
LiquidCrystal_I2C lcd(0x27, 16, 2);

#include <DHT.h>
#include <DHT_U.h>
#include "dht.h"
#define DHTPIN 9     
#define DHTTYPE DHT11

DHT dht(DHTPIN, DHTTYPE);

void preset();
int menuPreset = 1;
void execetuteActionPreset();
void updateMenuPreset();
void yesAction();
void noAction();

int upButton = 10;
int downButton = 11;
int selectButton = 12;

int x;

const unsigned long eventInterval = 500;
unsigned long previousTime = 0;

int menu = 1;
void updateMenu();
void executeAction();
void action1();
void action2();

void updateMenu2();
void executeAction2();
void action11();
void action22();

int relayPin1 = 6; //fan
int relayPin2 = 4; //bulb
int relayPin3 = 5; //synch motor


void setup()
{
  Serial.begin(9600);
  lcd.begin();
  lcd.backlight();
  lcd.clear();
  lcd.print("WELCOME");
  lcd.setCursor(0, 1);
  lcd.print("press upd/down to continue");
  pinMode(upButton, INPUT_PULLUP);
  pinMode(downButton, INPUT_PULLUP);
  pinMode(selectButton, INPUT_PULLUP);
  pinMode(LED_BUILTIN, OUTPUT);
  
  if (EEPROM.read(256) == 1){
    lcd.clear();
    lcd.print("Current: 1 ");
    lcd.setCursor(0, 1);
    lcd.print("Press up/down");
    
    delay(2000);
  }
  else{
    while(x == 0){
    if (!digitalRead(downButton)){
      menuPreset++;
      updateMenuPreset();
      delay(100);
      while(!digitalRead(downButton));
    }
    if (!digitalRead(upButton)){
    menuPreset--;
    updateMenuPreset();
    delay(100);
    while(!digitalRead(upButton));
    }
    if (!digitalRead(selectButton)){
    executeActionPreset();
    delay(100);
    while (!digitalRead(selectButton));
     }
    }  
   }
   dht.begin();
   pinMode(relayPin1, OUTPUT);
   pinMode(relayPin2, OUTPUT);
   pinMode(relayPin3, OUTPUT);
   
   lcd.clear();
   updateMenu();
}

void loop()
{
  
  if (EEPROM.read(256) == 1){
    if (!digitalRead(downButton)){
      menu++;
      updateMenu();
      delay(100);
    }
    if (!digitalRead(upButton)){
    menu--;
    updateMenu();
    delay(100);
    }
    if (!digitalRead(selectButton)){
    executeAction();
    updateMenu();
    delay(100);
    }
    //millis
    unsigned long currentTime = millis();
    if(currentTime - previousTime >= eventInterval){
    //sensors (dht)
    delay(50);
    float h = dht.readHumidity();                        // Reading temperature or humidity takes about 250 milliseconds!
    float t = dht.readTemperature();                     // Read temperature as Celsius (the default)
    float f = dht.readTemperature(true);                 // Read temperature as Fahrenheit (isFahrenheit = true)   
    if (isnan(h) || isnan(t) || isnan(f)) {
    Serial.println("Failed to read from DHT sensor!");  // Check if any reads failed and exit early (to try again).
    return;
    }
    float hif = dht.computeHeatIndex(f, h);              // Compute heat index in Fahrenheit (the default)
    float hic = dht.computeHeatIndex(t, h, false);

    if (f > 101){ //bulb
      digitalWrite(LED_BUILTIN, HIGH);
      digitalWrite(relayPin2, HIGH);
      delay(10);
    }
    else if(f <= 99){
      digitalWrite(LED_BUILTIN, LOW);
      digitalWrite(relayPin2, LOW);
      delay(10);
    }
    
    if(f > 101){ //fan
      digitalWrite(relayPin1, HIGH);
      digitalWrite(LED_BUILTIN, HIGH);
      delay(10);
    }
    else if (f < 99){
      digitalWrite(relayPin1, LOW);
      digitalWrite(LED_BUILTIN, LOW);
      delay(10);
    }

    for(int y=1; y<9; y++){
    Serial.println(y);
    if(y<=2){
    digitalWrite(relayPin3, HIGH);
    delay(4000);
    }
    else if(y>=5&&y<=6){
    digitalWrite(relayPin3, HIGH);
    delay(4000);
    }
    else if(y>=3&&y<=4){
    digitalWrite(relayPin3, LOW);
    delay(1000);
    }
    else if(y>=7&&y<=8){
    digitalWrite(relayPin3, LOW);
    delay(1000);
  }
  }
    previousTime += eventInterval;
  }
 } //end of preset
 
 else {
  lcd.clear(); 
  updateMenu2();
  
  while(EEPROM.read(256) == 0){
     if (!digitalRead(downButton)){
      menu++;
      updateMenu2();
      delay(100);
      while (!digitalRead(downButton));
    }
    if (!digitalRead(upButton)){
    menu--;
    updateMenu2();
    delay(100);
    while (!digitalRead(upButton));
    }
    if (!digitalRead(selectButton)){
    executeAction2();
    updateMenu2();
    delay(100);
    while (!digitalRead(selectButton));
    }
  }
 }
  
} //end of loop

void preset(){
  x = 1;
  EEPROM.write(256, x);
  lcd.clear();
  lcd.print("created a preset");
  lcd.setCursor(0, 1);
  lcd.print(EEPROM.read(256));
  delay(2000);
}

void updateMenuPreset(){
 switch (menuPreset) {
  case 0:
      menuPreset = 1;
      break;
    case 1:
      lcd.clear();
      lcd.print("Make a new value? ");
      lcd.setCursor(0, 1);
      lcd.print(">Yes");
      lcd.print(" No");
      break;
    case 2:
      lcd.clear();
      lcd.print("Make a new value? ");
      lcd.setCursor(0, 1);
      lcd.print(" Yes");
      lcd.print(">No");
      break;
    case 3:
      menuPreset = 2;
      break;
  }
}

void executeActionPreset(){
  switch (menuPreset) {
    case 1:
      yesAction();
      break;
    case 2:
      noAction();
      break;
  }
}

void yesAction(){
  lcd.clear();
  lcd.print("creating preset");
  delay(500);
  preset();
  x = 1;
  EEPROM.write(256, x);
  delay(1000);
  lcd.clear();
  lcd.print("Proceed to main menu");
  lcd.setCursor(0, 1);
  lcd.print("press any button to continue");
  delay(500);
}

void noAction(){
  lcd.clear();
  lcd.print("No preset");
  x = 1;
  delay(1000);
  lcd.clear();
  lcd.print("Proceed to main menu");
  lcd.setCursor(0, 1);
  lcd.print("press any button to continue");
  delay(500);
}

void updateMenu() {
  switch (menu) {
    case 0:
      menu = 1;
      break;
    case 1:
      lcd.clear();
      lcd.print("Day 01");
      lcd.setCursor(0, 1);
      lcd.print(">show ");
      lcd.print(" rst");
      break;
    case 2:
      lcd.clear();
      lcd.print("Day 01");
      lcd.setCursor(0, 1);
      lcd.print(" show");
      lcd.print(" >rst");
      break;
    case 3:
      menu = 2;
      break;
  }
}

void executeAction() {
  switch (menu) {
    case 1:
      action1();
      break;
    case 2:
      action2();
      break;
  }
}

void action1() {
 delay(50);
 float h = dht.readHumidity();                        
 float t = dht.readTemperature();                     
 float f = dht.readTemperature(true);                    
 if (isnan(h) || isnan(t) || isnan(f)) {
  Serial.println("Failed to read from DHT sensor!");  
  return;
  }
  
 float hif = dht.computeHeatIndex(f, h);              
 float hic = dht.computeHeatIndex(t, h, false); 
 
 lcd.clear();
 lcd.print("Hum: ");
 lcd.print(h);
 lcd.setCursor(0, 1);
 lcd.print("Temp: ");
 lcd.print(t);
 delay(1500);
}

void action2() {
  lcd.clear();
  lcd.print("Are you sure?");
  x = 0;
  EEPROM.write(256, x);
  delay(500);
  lcd.clear();
  lcd.print("complete");
  delay(1500);
}

void updateMenu2() {
   switch (menu) {
    case 0:
      menu = 1;
      break;
    case 1:
      lcd.clear();
      lcd.print("No preset");
      lcd.setCursor(0, 1);
      lcd.print(">show ");
      lcd.print(" make");
      break;
    case 2:
      lcd.clear();
      lcd.print("No preset");
      lcd.setCursor(0, 1);
      lcd.print(" show");
      lcd.print(" >make");
      break;
    case 3:
      menu = 2;
      break;
  }
}

void executeAction2() {
  switch (menu) {
    case 1:
      action11();
      break;
    case 2:
      action22();
      break;
  }
}

void action11(){
   delay(50);
 float h = dht.readHumidity();                        
 float t = dht.readTemperature();                     
 float f = dht.readTemperature(true);                    
 if (isnan(h) || isnan(t) || isnan(f)) {
  Serial.println("Failed to read from DHT sensor!");  
  return;
  }
  
 float hif = dht.computeHeatIndex(f, h);              
 float hic = dht.computeHeatIndex(t, h, false); 
 
 lcd.clear();
 lcd.print("Hum: ");
 lcd.print(h);
 lcd.setCursor(0, 1);
 lcd.print("Temp: ");
 lcd.print(t);
 delay(1500);
}

void action22(){
  lcd.clear();
  lcd.print("creating preset");
  delay(500);
  preset();
  x = 1;
  EEPROM.write(256, x);
  delay(1000);
  lcd.clear();
  lcd.print("Proceed to main menu");
  lcd.setCursor(0, 1);
  lcd.print("press any button to continue");
  delay(500);
}
